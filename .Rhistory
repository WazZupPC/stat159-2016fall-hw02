mportfolio <- as.data.frame(mportfolio) #coerce the list into a data frame.
mportfolio<- mportfolio+1 # each return rate plus 1.
mportfolio <- c('GOOG','AAPL')
mportfolio <- getSymbols(mportfolio, from = dateStart, to = dateEnd)
mportfolio <- merge(AAPL, GOOG)
mportfolio <- mportfolio[, c(6,12)]
mportfolio <- lapply(mportfolio, dailyReturn) #get the daily return rate for each stock. the result is list.
mportfolio <- as.data.frame(mportfolio) #coerce the list into a data frame.
mportfolio<- mportfolio+1 # each return rate plus 1.
mportfolio <- c('GOOG','AAPL')
mportfolio <- getSymbols(mportfolio, from = dateStart, to = dateEnd)
mportfolio <- merge(AAPL, GOOG)
mportfolio <- mportfolio[, c(6,12)]
mportfolio <- lapply(mportfolio, dailyReturn) #get the daily return rate for each stock. the result is list.
mportfolio <- as.data.frame(mportfolio) #coerce the list into a data frame.
mportfolio<- mportfolio+1 # each return rate plus 1.
mportfolio <- c('GOOG','AAPL')
mportfolio <- getSymbols(mportfolio, from = dateStart, to = dateEnd)
mportfolio <- merge(AAPL, GOOG)
mportfolio <- mportfolio[, c(6,12)]
mportfolio <- lapply(mportfolio, dailyReturn) #get the daily return rate for each stock. the result is list.
mportfolio <- as.data.frame(mportfolio) #coerce the list into a data frame.
mportfolio<- mportfolio+1 # each return rate plus 1.
mportfolio <- c('GOOG','AAPL')
mportfolio <- getSymbols(mportfolio, from = dateStart, to = dateEnd)
mportfolio <- merge(AAPL, GOOG)
mportfolio <- mportfolio[, c(6,12)]
mportfolio <- lapply(mportfolio, dailyReturn) #get the daily return rate for each stock. the result is list.
mportfolio <- as.data.frame(mportfolio) #coerce the list into a data frame.
mportfolio<- mportfolio+1 # each return rate plus 1.
mportfolio <- c('GOOG','AAPL')
mportfolio <- getSymbols(mportfolio, from = dateStart, to = dateEnd)
mportfolio <- merge(AAPL, GOOG)
mportfolio <- mportfolio[, c(6,12)]
mportfolio <- lapply(mportfolio, dailyReturn) #get the daily return rate for each stock. the result is list.
mportfolio <- as.data.frame(mportfolio) #coerce the list into a data frame.
mportfolio<- mportfolio+1 # each return rate plus 1.
for(i in 1:330 ) {
mportfolio[i, 1]<-(2002.28/2)* mportfolio[i, 1]
}
initial_capital <- 1001.14
initial_capital <- 1001.14
for(i in 1:330 ) {
mportfolio[i, 1]<-initial_capital* mportfolio[i, 1]
initial_capital <-  mportfolio[i, 1]
}
mportfolio <- c('GOOG','AAPL')
mportfolio <- getSymbols(mportfolio, from = dateStart, to = dateEnd)
mportfolio <- merge(AAPL, GOOG)
mportfolio <- mportfolio[, c(6,12)]
mportfolio <- lapply(mportfolio, dailyReturn) #get the daily return rate for each stock. the result is list.
mportfolio <- as.data.frame(mportfolio) #coerce the list into a data frame.
mportfolio<- mportfolio+1 # each return rate plus 1.
initial_capital <- 1001.14
for(i in 1:330 ) {
mportfolio[i, 1]<-initial_capital* mportfolio[i, 1]
initial_capital <-  mportfolio[i, 1]
}
spx$Date <- rownames(spx)
portfolio$Date <- rownames(portfolio)
portfolio.hedged$Date <- rownames(portfolio.hedged)
spx$Date <- as.Date(spx$Date)
portfolio$Date <- as.Date(portfolio$Date)
portfolio.hedged$Date <- as.Date(portfolio.hedged$Date)
str(spx)
ggplot(spx,aes(Date,AdjClose)) +
geom_line(aes(color="spx", group = 1)) +
geom_line(data = portfolio, aes(color='portfolio', group = 1)) +
geom_line(data = portfolio.hedged, aes(color='portfolio.hedged', group = 1)) +
scale_colour_manual("", breaks = c("spx", "portfolio","portfolio.hedged"), values = c("blue", "brown","green")) +
ggtitle("Alpha Hedge")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
spx$Date <- rownames(spx)
portfolio$Date <- rownames(portfolio)
portfolio.hedged$Date <- rownames(portfolio.hedged)
spx$Date <- as.Date(spx$Date)
portfolio$Date <- as.Date(portfolio$Date)
portfolio.hedged$Date <- as.Date(portfolio.hedged$Date)
str(spx)
ggplot(spx,aes(Date,AdjClose)) +
geom_line(aes(color="spx", group = 1)) +
geom_line(data = portfolio, aes(color='portfolio', group = 1)) +
geom_line(data = portfolio.hedged, aes(color='portfolio.hedged', group = 1)) +
scale_colour_manual("", breaks = c("spx", "portfolio","portfolio.hedged"), values = c("blue", "brown","green")) +
ggtitle("Alpha Hedge")
library(quantmod)
library(tseries)
library(zoo)
library(ggplot2)
#set up the period.
dateStart <- "2014-9-1"
dateEnd <- "2015-12-21"
#get the SP500 index from the Internet.
spx <- get.hist.quote(instrument = "^gspc", start = dateStart,
end = dateEnd, quote = "AdjClose")
spx <- as.data.frame(spx)
#creat a vector including the 30 stocks, porfolio.
portfolio_30 <- c('EQM', 'BUD', 'DLPH', 'RAI', 'GIB', 'AMGN', 'DG', 'SBNY', 'Q', 'SUN', 'LEA', 'ROST',
'VRSK', 'HD', 'ABT', 'DEO', 'MO','GOOG', 'EVER', 'DIS', 'MJN', 'TSCO', 'MCD', 'FIBK',
'JNJ', 'CDW', 'LTXB', 'CNI', 'ATO', 'AMCX')
spx.hedge <- 	1.188789*spx
spx.heage.value <- spx.hedge
spx.heage.value[1,1] <- 0
for(i in 2:330){
spx.heage.value[i,1] <- spx.hedge[i-1,1]-spx.hedge[1,1]
}
portfolio.hedged <- spx.heage.value + portfolio
#get beta
spx.hedge <- 	1.188789*spx
spx.heage.value <- spx.hedge
spx.heage.value[1,1] <- 0
for(i in 2:330){
spx.heage.value[i,1] <- spx.hedge[1,1]-spx.hedge[i,1]
}
portfolio.hedged <- spx.heage.value + portfolio
library(quantmod)
library(tseries)
library(zoo)
library(ggplot2)
#set up the period.
dateStart <- "2014-9-1"
dateEnd <- "2015-12-21"
#get the SP500 index from the Internet.
spx <- get.hist.quote(instrument = "^gspc", start = dateStart,
end = dateEnd, quote = "AdjClose")
spx <- as.data.frame(spx)
#creat a vector including the 30 stocks, porfolio.
portfolio_30 <- c('EQM', 'BUD', 'DLPH', 'RAI', 'GIB', 'AMGN', 'DG', 'SBNY', 'Q', 'SUN', 'LEA', 'ROST',
'VRSK', 'HD', 'ABT', 'DEO', 'MO','GOOG', 'EVER', 'DIS', 'MJN', 'TSCO', 'MCD', 'FIBK',
'JNJ', 'CDW', 'LTXB', 'CNI', 'ATO', 'AMCX')
#get the 30 stocks price in history from the Internet.
portfolio_30 <- getSymbols(portfolio_30, from = dateStart, to = dateEnd)
#change the historical price into daily return rate + 1.
Stocks_Prices <- merge(EQM, BUD, DLPH, RAI, GIB, AMGN, DG, SBNY, Q, SUN, LEA, ROST, VRSK,
HD, ABT, DEO, MO,GOOG, EVER, DIS, MJN, TSCO, MCD, FIBK, JNJ, CDW,
LTXB, CNI, ATO, AMCX)#merge all the stocks' prices.
Stocks_AjustedPrices <- Stocks_Prices[ ,c(seq(0,180, by= 6))]#extract the *.Adjusted column.
ls_daily_return_rate <- lapply(Stocks_AjustedPrices, dailyReturn) #get the daily return rate for each stock. the result is list.
df_daily_return_rate <- as.data.frame(ls_daily_return_rate) #coerce the list into a data frame.
df_daily_return_rate <- df_daily_return_rate+1 # each return rate plus 1.
names(df_daily_return_rate) <- c('EQM', 'BUD', 'DLPH', 'RAI', 'GIB', 'AMGN', 'DG', 'SBNY', 'Q',
'SUN', 'LEA', 'ROST', 'VRSK', 'HD', 'ABT', 'DEO', 'MO','GOOG',
'EVER', 'DIS', 'MJN', 'TSCO', 'MCD', 'FIBK', 'JNJ', 'CDW', 'LTXB',
'CNI', 'ATO', 'AMCX')
#iterate the return price of each stock
for(j in 1:30) {
initial_capital <- 2002.28/30
for(i in 1:330 ) {
Stocks_AjustedPrices[i, j]<-initial_capital* df_daily_return_rate[i, j]
initial_capital <- Stocks_AjustedPrices[i, j]
}
}
#add up each stock's position for each day
portfolio <- apply(Stocks_AjustedPrices, 1, sum)
portfolio <- as.data.frame(portfolio)
names(portfolio) <- "AdjClose"
#get beta
spx.hedge <- 	1.188789*spx
spx.heage.value <- spx.hedge
spx.heage.value[1,1] <- 0
for(i in 2:330){
spx.heage.value[i,1] <- spx.hedge[1,1]-spx.hedge[i,1]
}
portfolio.hedged <- spx.heage.value + portfolio
#calculate the monthly return for spx and portfolio
spx_monthlyReturn <- monthlyReturn(spx)
portfolio_monthlyReturn <- periodReturn(portfolio, period="monthly")
portfolio.hedged_monthlyReturn <- periodReturn(portfolio.hedged, period="monthly")
#value graph
spx$Date <- rownames(spx)
portfolio$Date <- rownames(portfolio)
portfolio.hedged$Date <- rownames(portfolio.hedged)
spx$Date <- as.Date(spx$Date)
portfolio$Date <- as.Date(portfolio$Date)
portfolio.hedged$Date <- as.Date(portfolio.hedged$Date)
str(spx)
ggplot(spx,aes(Date,AdjClose)) +
geom_line(aes(color="spx", group = 1)) +
geom_line(data = portfolio, aes(color='portfolio', group = 1)) +
geom_line(data = portfolio.hedged, aes(color='portfolio.hedged', group = 1)) +
scale_colour_manual("", breaks = c("spx", "portfolio","portfolio.hedged"), values = c("blue", "brown","green")) +
ggtitle("Alpha Hedge")
ggtitle("Alpha Hedge")
---
title: "GMBP Alpha Hedge"
author: "Alec Cai, Yushen Chen, Hanson Peng"
date: "December 29, 2015"
output: pdf_document
---
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r}
library(quantmod)
library(tseries)
library(zoo)
library(ggplot2)
#set up the period.
dateStart <- "2014-9-1"
dateEnd <- "2015-12-21"
#get the SP500 index from the Internet.
spx <- get.hist.quote(instrument = "^gspc", start = dateStart,
end = dateEnd, quote = "AdjClose")
spx <- as.data.frame(spx)
#creat a vector including the 30 stocks, porfolio.
portfolio_30 <- c('EQM', 'BUD', 'DLPH', 'RAI', 'GIB', 'AMGN', 'DG', 'SBNY', 'Q', 'SUN', 'LEA', 'ROST',
'VRSK', 'HD', 'ABT', 'DEO', 'MO','GOOG', 'EVER', 'DIS', 'MJN', 'TSCO', 'MCD', 'FIBK',
'JNJ', 'CDW', 'LTXB', 'CNI', 'ATO', 'AMCX')
#get the 30 stocks price in history from the Internet.
portfolio_30 <- getSymbols(portfolio_30, from = dateStart, to = dateEnd)
#change the historical price into daily return rate + 1.
Stocks_Prices <- merge(EQM, BUD, DLPH, RAI, GIB, AMGN, DG, SBNY, Q, SUN, LEA, ROST, VRSK,
HD, ABT, DEO, MO,GOOG, EVER, DIS, MJN, TSCO, MCD, FIBK, JNJ, CDW,
LTXB, CNI, ATO, AMCX)#merge all the stocks' prices.
Stocks_AjustedPrices <- Stocks_Prices[ ,c(seq(0,180, by= 6))]#extract the *.Adjusted column.
ls_daily_return_rate <- lapply(Stocks_AjustedPrices, dailyReturn) #get the daily return rate for each stock. the result is list.
df_daily_return_rate <- as.data.frame(ls_daily_return_rate) #coerce the list into a data frame.
df_daily_return_rate <- df_daily_return_rate+1 # each return rate plus 1.
names(df_daily_return_rate) <- c('EQM', 'BUD', 'DLPH', 'RAI', 'GIB', 'AMGN', 'DG', 'SBNY', 'Q',
'SUN', 'LEA', 'ROST', 'VRSK', 'HD', 'ABT', 'DEO', 'MO','GOOG',
'EVER', 'DIS', 'MJN', 'TSCO', 'MCD', 'FIBK', 'JNJ', 'CDW', 'LTXB',
'CNI', 'ATO', 'AMCX')
#iterate the return price of each stock
for(j in 1:30) {
initial_capital <- 2002.28/30
for(i in 1:330 ) {
Stocks_AjustedPrices[i, j]<-initial_capital* df_daily_return_rate[i, j]
initial_capital <- Stocks_AjustedPrices[i, j]
}
}
#add up each stock's position for each day
portfolio <- apply(Stocks_AjustedPrices, 1, sum)
portfolio <- as.data.frame(portfolio)
names(portfolio) <- "AdjClose"
#get beta
spx.hedge <- 	1.188789*spx
spx.heage.value <- spx.hedge
spx.heage.value[1,1] <- 0
for(i in 2:330){
spx.heage.value[i,1] <- spx.hedge[1,1]-spx.hedge[i,1]
}
portfolio.hedged <- spx.heage.value + portfolio
#calculate the monthly return for spx and portfolio
spx_monthlyReturn <- monthlyReturn(spx)
portfolio_monthlyReturn <- periodReturn(portfolio, period="monthly")
portfolio.hedged_monthlyReturn <- periodReturn(portfolio.hedged, period="monthly")
#value graph
spx$Date <- rownames(spx)
portfolio$Date <- rownames(portfolio)
portfolio.hedged$Date <- rownames(portfolio.hedged)
spx$Date <- as.Date(spx$Date)
portfolio$Date <- as.Date(portfolio$Date)
portfolio.hedged$Date <- as.Date(portfolio.hedged$Date)
str(spx)
ggplot(spx,aes(Date,AdjClose)) +
geom_line(aes(color="spx", group = 1)) +
geom_line(data = portfolio, aes(color='portfolio', group = 1)) +
geom_line(data = portfolio.hedged, aes(color='portfolio.hedged', group = 1)) +
scale_colour_manual("", breaks = c("spx", "portfolio","portfolio.hedged"), values = c("blue", "brown","green")) +
ggtitle("Alpha Hedge")
```
(1 + 2) * 2 * 2 * 2 * 2 * 2 * 3 * (3 + 4)
(5 + 5) * 4 * 5 * 2* 5 + 2 * 8
##set up the observation period for CAPM Beta.
BdateStart <- "2014-1-1"
BdateEnd <- "2014-12-1"
##get the SP500 index from the Internet.
Bspx <- get.hist.quote(instrument = "^gspc", start = BdateStart,
end = BdateEnd, quote = "AdjClose")
#coerce list into data frame
BSPX <- cbind(Date = time(Bspx), as.data.frame(Bspx))
colnames(BSPX) <- c('Date', 'dailyPosition')
##get the stocks' price in history from the Internet.
#creat a vector including the stocks, porfolio.
Bportfolio_tickers_names <- c('EQM', 'BUD', 'DLPH', 'RAI', 'GIB', 'AMGN', 'DG', 'SBNY', 'Q', 'SUN', 'LEA', 'ROST',
'VRSK', 'HD', 'ABT', 'DEO', 'MO','GOOG', 'EVER', 'DIS', 'MJN', 'TSCO', 'MCD', 'FIBK',
'JNJ', 'CDW', 'LTXB', 'CNI', 'ATO', 'AMCX')
#create an empty xts object
Bls_portfolio <- lapply(1:length(Bportfolio_tickers_names), FUN = function(i) xts(Bspx, index(Bspx)))
BLL <- lapply(Bls_portfolio,dailyReturn)
Bportfolio <- do.call("merge", Bls_portfolio)
#get the stocks’ price in history from the Internet and gether in a data frame.
for(i in 1: length(Bportfolio_tickers_names)) {
Bportfolio[, i] <- get.hist.quote(instrument= Bportfolio_tickers_names[i], start = BdateStart, end = BdateEnd, quote = 'AdjClose')
}
library(quantmod)
library(tseries)
library(zoo)
library(xts)
library(ggplot2)
#create an empty xts object
Bls_portfolio <- lapply(1:length(Bportfolio_tickers_names), FUN = function(i) xts(Bspx, index(Bspx)))
BLL <- lapply(Bls_portfolio,dailyReturn)
Bportfolio <- do.call("merge", Bls_portfolio)
##set up the observation period for CAPM Beta.
BdateStart <- "2014-1-1"
BdateEnd <- "2014-12-1"
##get the SP500 index from the Internet.
Bspx <- get.hist.quote(instrument = "^gspc", start = BdateStart,
end = BdateEnd, quote = "AdjClose")
#coerce list into data frame
BSPX <- cbind(Date = time(Bspx), as.data.frame(Bspx))
colnames(BSPX) <- c('Date', 'dailyPosition')
##get the stocks' price in history from the Internet.
#creat a vector including the stocks, porfolio.
Bportfolio_tickers_names <- c('EQM', 'BUD', 'DLPH', 'RAI', 'GIB', 'AMGN', 'DG', 'SBNY', 'Q', 'SUN', 'LEA', 'ROST',
'VRSK', 'HD', 'ABT', 'DEO', 'MO','GOOG', 'EVER', 'DIS', 'MJN', 'TSCO', 'MCD', 'FIBK',
'JNJ', 'CDW', 'LTXB', 'CNI', 'ATO', 'AMCX')
#create an empty xts object
Bls_portfolio <- lapply(1:length(Bportfolio_tickers_names), FUN = function(i) xts(Bspx, index(Bspx)))
BLL <- lapply(Bls_portfolio,dailyReturn)
Bportfolio <- do.call("merge", Bls_portfolio)
View(Bportfolio)
#get the stocks’ price in history from the Internet and gether in a data frame.
for(i in 1: length(Bportfolio_tickers_names)) {
Bportfolio[, i] <- get.hist.quote(instrument= Bportfolio_tickers_names[i], start = BdateStart, end = BdateEnd, quote = 'AdjClose')
}
View(Bportfolio)
##set up the observation period for CAPM Beta.
BdateStart <- "2014-3-27"
BdateEnd <- "2014-12-1"
##get the SP500 index from the Internet.
Bspx <- get.hist.quote(instrument = "^gspc", start = BdateStart,
end = BdateEnd, quote = "AdjClose")
#coerce list into data frame
BSPX <- cbind(Date = time(Bspx), as.data.frame(Bspx))
colnames(BSPX) <- c('Date', 'dailyPosition')
##get the stocks' price in history from the Internet.
#creat a vector including the stocks, porfolio.
Bportfolio_tickers_names <- c('EQM', 'BUD', 'DLPH', 'RAI', 'GIB', 'AMGN', 'DG', 'SBNY', 'Q', 'SUN', 'LEA', 'ROST',
'VRSK', 'HD', 'ABT', 'DEO', 'MO','GOOG', 'EVER', 'DIS', 'MJN', 'TSCO', 'MCD', 'FIBK',
'JNJ', 'CDW', 'LTXB', 'CNI', 'ATO', 'AMCX')
#create an empty xts object
Bls_portfolio <- lapply(1:length(Bportfolio_tickers_names), FUN = function(i) xts(Bspx, index(Bspx)))
BLL <- lapply(Bls_portfolio,dailyReturn)
Bportfolio <- do.call("merge", Bls_portfolio)
#get the stocks’ price in history from the Internet and gether in a data frame.
for(i in 1: length(Bportfolio_tickers_names)) {
Bportfolio[, i] <- get.hist.quote(instrument= Bportfolio_tickers_names[i], start = BdateStart, end = BdateEnd, quote = 'AdjClose')
}
Bls_daily_return_rate <- lapply(Bportfolio, dailyReturn)
#coerce the list into a data frame.
Bdf_daily_return_rate <- as.data.frame(Bls_daily_return_rate)
Bdf_daily_return_rate <- Bdf_daily_return_rate+1 # each return rate plus 1.
names(Bdf_daily_return_rate) <- c('EQM', 'BUD', 'DLPH', 'RAI', 'GIB', 'AMGN', 'DG', 'SBNY', 'Q',
'SUN', 'LEA', 'ROST', 'VRSK', 'HD', 'ABT', 'DEO', 'MO','GOOG',
'EVER', 'DIS', 'MJN', 'TSCO', 'MCD', 'FIBK', 'JNJ', 'CDW', 'LTXB',
'CNI', 'ATO', 'AMCX')
View(Bdf_daily_return_rate)
#iterate the return price of each stock
for(j in 1:length(Bportfolio_tickers_names)) {
Binitial_capital <- as.numeric(BSPX[1,2])/length(Bportfolio_tickers_names)
for(i in 1:nrow(BSPX)) {
Bportfolio[i, j]<-Binitial_capital* Bdf_daily_return_rate[i, j]
Binitial_capital <- Bportfolio[i, j]
}
}
View(Binitial_capital)
View(Bdf_daily_return_rate)
View(Bportfolio)
# name the each stock in the portfolio
names(Bportfolio) <- c('EQM', 'BUD', 'DLPH', 'RAI', 'GIB', 'AMGN', 'DG', 'SBNY', 'Q',
'SUN', 'LEA', 'ROST', 'VRSK', 'HD', 'ABT', 'DEO', 'MO','GOOG',
'EVER', 'DIS', 'MJN', 'TSCO', 'MCD', 'FIBK', 'JNJ', 'CDW', 'LTXB',
'CNI', 'ATO', 'AMCX')
#add up each stock's position for each day
Bportfolio_daily_position <- apply(Bportfolio, 1, sum)
Bportfolio_daily_position <- as.data.frame(Bportfolio_daily_position)
names(Bportfolio_daily_position) <- "dailyPosition"
##Calculate the CAPM Beta
#calculate the monthly return for spx and portfolio
Bdf_spx <- as.data.frame(Bspx)
Bspx_monthlyReturn_rate <- periodReturn(Bdf_spx, period="monthly")
Bportfolio_monthlyReturn_rate <- periodReturn(Bportfolio, period="monthly")
Beta <- cov(Bspx_monthlyReturn_rate, Bportfolio_monthlyReturn_rate)/var(Bspx_monthlyReturn_rate)
library(quantmod)
library(tseries)
library(zoo)
library(xts)
library(ggplot2)
####set up the period for calculating the portfolio after hedging.
dateStart <- "2015-1-1"
dateEnd <- "2015-12-1"
##get the SP500 index from the Internet.
spx <- get.hist.quote(instrument = "^gspc", start = dateStart,
end = dateEnd, quote = "AdjClose")
#coerce list into data frame
SPX <- cbind(Date = time(spx), as.data.frame(spx))
colnames(SPX) <- c('Date', 'dailyPosition')
##get the stocks' price in history from the Internet.
#creat a vector including the stocks, porfolio.
portfolio_tickers_names <- c('EQM', 'BUD', 'DLPH', 'RAI', 'GIB', 'AMGN', 'DG', 'SBNY', 'Q', 'SUN', 'LEA', 'ROST',
'VRSK', 'HD', 'ABT', 'DEO', 'MO','GOOG', 'EVER', 'DIS', 'MJN', 'TSCO', 'MCD', 'FIBK',
'JNJ', 'CDW', 'LTXB', 'CNI', 'ATO', 'AMCX')
#create an empty xts object
ls_portfolio <- lapply(1:length(portfolio_tickers_names), FUN = function(i) xts(spx, index(spx)))
portfolio <- do.call("merge", ls_portfolio)
#get the stocks’ price in history from the Internet and gether in a data frame.
for(i in 1: length(portfolio_tickers_names)) {
portfolio[, i] <- get.hist.quote(instrument= portfolio_tickers_names[i], start = dateStart, end = dateEnd, quote = 'AdjClose')
}
#get the daily return rate for each stock. the result is list.
ls_daily_return_rate <- lapply(portfolio, dailyReturn)
#coerce the list into a data frame.
df_daily_return_rate <- as.data.frame(ls_daily_return_rate)
df_daily_return_rate <- df_daily_return_rate+1 # each return rate plus 1.
names(df_daily_return_rate) <- c('EQM', 'BUD', 'DLPH', 'RAI', 'GIB', 'AMGN', 'DG', 'SBNY', 'Q',
'SUN', 'LEA', 'ROST', 'VRSK', 'HD', 'ABT', 'DEO', 'MO','GOOG',
'EVER', 'DIS', 'MJN', 'TSCO', 'MCD', 'FIBK', 'JNJ', 'CDW', 'LTXB',
'CNI', 'ATO', 'AMCX')
#iterate the return price of each stock
for(j in 1:length(portfolio_tickers_names)) {
initial_capital <- as.numeric(SPX[1,2])/length(portfolio_tickers_names)
for(i in 1:nrow(SPX)) {
portfolio[i, j]<-initial_capital* df_daily_return_rate[i, j]
initial_capital <- portfolio[i, j]
}
}
# name the each stock in the portfolio
names(portfolio) <- c('EQM', 'BUD', 'DLPH', 'RAI', 'GIB', 'AMGN', 'DG', 'SBNY', 'Q',
'SUN', 'LEA', 'ROST', 'VRSK', 'HD', 'ABT', 'DEO', 'MO','GOOG',
'EVER', 'DIS', 'MJN', 'TSCO', 'MCD', 'FIBK', 'JNJ', 'CDW', 'LTXB',
'CNI', 'ATO', 'AMCX')
#add up each stock's position for each day
portfolio_daily_position <- apply(portfolio, 1, sum)
portfolio_daily_position <- as.data.frame(portfolio_daily_position)
names(portfolio_daily_position) <- "dailyPosition"
spx.hedge <- as.numeric(Beta)*spx
spx.hedge <- as.data.frame(spx.hedge)
names(spx.hedge) <- "spx.hedge"
#calculate hedge daily accumulated change
spx.hedge.value <- spx.hedge
spx.hedge.value[1,1] <- 0
for(i in 2 : nrow(spx.hedge)) { 
spx.hedge.value[i, 1] <- spx.hedge[i,1] - spx.hedge[1,1]
}
#portfolio daily return after hedging
portfolio_after_hedging <- portfolio_daily_position - spx.hedge.value
###Graphing
#convert the objects into data frame with Date column.
portfolio_daily_position$Date <- time(spx)
portfolio_after_hedging$Date <- time(spx)
##graph the positions change for SPX, portfolio_daily_position, portfolio_after_hedging
ggplot(data = SPX, aes(Date, dailyPosition)) +
geom_line(aes(color = 'SPX', group = 1)) +
geom_line(data = portfolio_daily_position, aes(color = "portfolio_daily_position", group = 1))+
geom_line(data = portfolio_after_hedging, aes(color = "portfolio_after_hedging", group = 1))+
scale_x_date(date_labels = "%b %Y") +
scale_colour_manual("", breaks = c("SPX", "portfolio_daily_position", "portfolio_after_hedging"), values = c("blue3", "black", "coral"))+
xlab("") + ylab("") + ggtitle("Alpha Hedge") +
##graph the positions change for SPX, portfolio_daily_position, portfolio_after_hedging
ggplot(data = SPX, aes(Date, dailyPosition)) +
geom_line(aes(color = 'SPX', group = 1)) +
geom_line(data = portfolio_daily_position, aes(color = "portfolio_daily_position", group = 1))+
geom_line(data = portfolio_after_hedging, aes(color = "portfolio_after_hedging", group = 1))+
scale_x_date(date_labels = "%b %Y") +
scale_colour_manual("", breaks = c("SPX", "portfolio_daily_position", "portfolio_after_hedging"), values = c("blue3", "black", "coral"))+
xlab("") + ylab("") + ggtitle("Alpha Hedge")
3^4
3*3*3*3
3^4 > 4^3
x <- c(2.5, 3, 3.5, 4, 4.5, 5)
sum(x)
x <- c(2.5^2, 3^2, 3.5^2, 4^2, 4.5^2, 5^2)
x
sum(x)
y <- c(1.3, 6.3, 11.7, 34.2, 71.4, 162)
sum(y)
x <- c(2.5, 3, 3.5, 4, 4.5, 5)
x*y
sum(x*y)
solve(3x+1=4)
q <- 3x+1=4
q <- 3x+1=4
q
solve(3x+1=4)
q <- 3x+1=4
solve(3x+1=4)
q <- 3x+1=4
q <- 3r+1=4
ln(1.3)
log(e, 1.3)
log(1.3)
y <- c(1.3,6.3,11.7,34.2,71.4,162)
log(y)
sum(log(y))
x <- c(2.5, 3, 3.5, 4, 4.5, 5)
sum(log(y)*x)
e^5.2312
exp(5.2312)
exp(0.5887)
（e^2)
（exp(2))
exp^(2)
exp^(2)*2
exp(2)
exp(-((125-100)^2))/(2*25^2))
exp(-(95^2)/(2*25^2))
(exp(-(95^2)/(2*25^2)))/(25*root(2*pi))
(exp(-(95^2)/(2*25^2)))/(25*sqrt(2*pi))
sqrt(4)
pi
(exp(-(25^2)/(2*25^2)))/(25*sqrt(2*pi))
(exp(-(20^2)/(2*25^2)))/(25*sqrt(2*pi)) / (exp(-(25^2)/(2*25^2)))/(25*sqrt(2*pi))
setwd("~/Documents/UCB/2016_Fall/STAT159/HW3")
advertising <- read.csv(“Advertising.csv”)
advertising <- read.csv("Advertising.csv")
View(advertising)
TVsales <- lm(sales ~ sales, data = advertising)
TVsales <- lm(sales ~ TV, data = advertising)
View(advertising)
TVsales <- lm(Sales ~ TV, data = advertising)
plot(TVsales)
